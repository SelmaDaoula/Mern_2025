const express = require("express");
const app = express();
const PORT = 3000;

// --- Middleware pour parser le JSON ---
// Cette ligne DOIT Ãªtre placÃ©e AVANT la dÃ©finition des routes POST
app.use(express.json());

// --- Routes GET ---
app.get("/", (req, res) => {
  res.status(200).send("<h1>Page d'accueil de notre API de Blog !</h1>");
});

app.get("/api/test", (req, res) => {
  res.status(200).json({
    message: "Le test a fonctionnÃ© !",
    success: true,
  });
});

// --- Route POST pour crÃ©er un article ---
app.post("/api/articles", (req, res) => {
  // GrÃ¢ce Ã  express.json(), req.body contient les donnÃ©es envoyÃ©es par le client
  const articleData = req.body;
  console.log("DonnÃ©es reÃ§ues :", articleData);

  // On simule la crÃ©ation dâ€™un article en renvoyant les donnÃ©es reÃ§ues
  res.status(201).json({
    message: "Article crÃ©Ã© avec succÃ¨s !",
    article: {
      id: Date.now(), // gÃ©nÃ©ration dâ€™un ID simulÃ©
      ...articleData,
    },
  });
});

// --- Lancer le serveur ---
app.listen(PORT, () => {
  console.log(`ğŸš€ Serveur dÃ©marrÃ© sur http://localhost:${PORT}`);
});
